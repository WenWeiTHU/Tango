{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\Game/assets\\scripts\\Game\\EnemySwing.js"],"names":["cc","Class","extends","require","properties","swingDuration","rotateDuration","targetPosX","targetPosY","onLoad","director","getCollisionManager","enabled","swingAction","setSwingAction","node","runAction","rotation","Math","atan","PI","swingUp","moveBy","v2","easing","easeCubicActionInOut","rotate","rotateBy","swingDown","repeatForever","sequence","start"],"mappings":";;;;;;AAAA;;;AAGAA,GAAGC,KAAH,CAAS;AACLC,aAASC,QAAQ,OAAR,CADJ;;AAGLC,gBAAY;AACRC,uBAAe,CADP;AAERC,wBAAgB,CAFR;AAGRC,oBAAY,CAHJ;AAIRC,oBAAY;AAJJ,KAHP;;AAYL;;;;AAIAC,UAhBK,oBAgBK;AACN;AACAT,WAAGU,QAAH,CAAYC,mBAAZ,GAAkCC,OAAlC,GAA4C,IAA5C;;AAEA;AACA,aAAKC,WAAL,GAAmB,KAAKC,cAAL,EAAnB;AACA,aAAKC,IAAL,CAAUC,SAAV,CAAoB,KAAKH,WAAzB;AACH,KAvBI;;;AAyBL;;;;AAIAC,kBA7BK,4BA6Ba;AACd,YAAG,KAAKP,UAAL,KAAoB,CAAvB,EAAyB;AACrB,iBAAKA,UAAL,GAAkB,CAAlB;AACH;AACD,aAAKQ,IAAL,CAAUE,QAAV,GAAqB,KAAK,MAAMC,KAAKC,IAAL,CAAU,KAAKX,UAAL,GAAkB,KAAKD,UAAjC,CAAN,GAAqDW,KAAKE,EAApF;;AAEA,YAAIC,UAAUrB,GAAGsB,MAAH,CAAU,KAAKjB,aAAf,EAA8BL,GAAGuB,EAAH,CAAM,KAAKhB,UAAX,EAAuB,KAAKC,UAA5B,CAA9B,EAAuEgB,MAAvE,CAA8ExB,GAAGyB,oBAAH,EAA9E,CAAd;AACA,YAAIC,SAAS1B,GAAG2B,QAAH,CAAY,KAAKrB,cAAjB,EAAiC,GAAjC,CAAb;AACA,YAAIsB,YAAY5B,GAAGsB,MAAH,CAAU,KAAKjB,aAAf,EAA8BL,GAAGuB,EAAH,CAAM,CAAC,KAAKhB,UAAZ,EAAwB,CAAC,KAAKC,UAA9B,CAA9B,EAAyEgB,MAAzE,CAAgFxB,GAAGyB,oBAAH,EAAhF,CAAhB;AACA,YAAIC,SAAS1B,GAAG2B,QAAH,CAAY,KAAKrB,cAAjB,EAAiC,GAAjC,CAAb;AACA;AACA,eAAON,GAAG6B,aAAH,CAAiB7B,GAAG8B,QAAH,CAAYT,OAAZ,EAAqBK,MAArB,EAA6BE,SAA7B,EAAwCF,MAAxC,CAAjB,CAAP;AACH,KAzCI;AA2CLK,SA3CK,mBA2CI,CAER;AA7CI;;AA+CL;AA/CJ","file":"EnemySwing.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\Game","sourcesContent":["/*\n * 来回移动敌人脚本\n */\ncc.Class({\n    extends: require(\"Enemy\"),\n\n    properties: {\n        swingDuration: 0,\n        rotateDuration: 0,\n        targetPosX: 0,\n        targetPosY: 0,\n    },\n\n\n\n    /*\n     * 初始化函数\n     * 功能：初始化脚本所需的设定\n     */\n    onLoad () {\n        // 开启碰撞检测\n        cc.director.getCollisionManager().enabled = true;\n        \n        // 为对象设定一个环绕和旋转的行为\n        this.swingAction = this.setSwingAction()\n        this.node.runAction(this.swingAction)\n    },\n\n    /*\n     * 设置环绕行为函数 \n     * 功能：给对象设定一个环绕着主角旋转的行为\n     */\n    setSwingAction () {\n        if(this.targetPosX === 0){\n            this.targetPosX = 1\n        }\n        this.node.rotation = 90 - 180 * Math.atan(this.targetPosY / this.targetPosX) / Math.PI\n\n        var swingUp = cc.moveBy(this.swingDuration, cc.v2(this.targetPosX, this.targetPosY)).easing(cc.easeCubicActionInOut()); \n        var rotate = cc.rotateBy(this.rotateDuration, 180)\n        var swingDown = cc.moveBy(this.swingDuration, cc.v2(-this.targetPosX, -this.targetPosY)).easing(cc.easeCubicActionInOut())\n        var rotate = cc.rotateBy(this.rotateDuration, 180)\n        // 不断重复\n        return cc.repeatForever(cc.sequence(swingUp, rotate, swingDown, rotate));\n    },\n\n    start () {\n        \n    },\n\n    // update (dt) {},\n});\n"]}