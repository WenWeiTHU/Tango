{"version":3,"sources":["EnemyCopter.js"],"names":["cc","Class","extends","require","properties","BulletPrefab","type","Prefab","default","Body","Node","Fly","shootTime","shootInterval","shootNum","bulletSpeed","flyRotationUpdate","shoot","schedule","createBullet","dir","v2","Player","x","node","y","newBullet","instantiate","bulletSetting","getComponent","r","Math","atan2","degree","PI","rotation","direction","speed","parent","addChild","sortAllChildren","onLoad","angle","circulateDir","flyDegree","face","circulateUpdate","centerX","radius","sin","centerY","cos","updateFlyDegree","dt","distance","mag","centerSpeed","update"],"mappings":"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","file":"EnemyCopter.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\Game","sourcesContent":["/*\n * 直升机敌人脚本\n */\n\ncc.Class({\n    extends: require(\"EnemySpin\"),\n\n    properties: {\n        BulletPrefab: {\n            type: cc.Prefab,\n            default: null,\n        },\n        Body: {\n            type: cc.Node,\n            default: null,\n        },\n        Fly: {\n            type: cc.Node,\n            default: null,\n        },\n        shootTime: 3,\n        shootInterval: 0.3,\n        shootNum: 3,\n        bulletSpeed: 100,\n        flyRotationUpdate: 15,\n    },\n\n    /*\n     * 发射子弹函数\n     * 功能：间隔一段较短的时间发射多颗子弹\n     */\n    shoot () {    \n        this.schedule(this.createBullet, this.shootInterval, this.shootNum - 1);\n    },\n\n    /*\n     * 创造子弹函数\n     * 功能：根据给定参数实例化一颗子弹，并且将其添加到本节点的父节点中\n     */\n    createBullet () {\n        // 对象和主角的位差向量\n        var dir = cc.v2(this.Player.x - this.node.x, this.Player.y - this.node.y);\n\n        // 构造新子弹，并设置参数\n        var newBullet = cc.instantiate(this.BulletPrefab);\n        var bulletSetting = newBullet.getComponent(\"Bullet\");\n\n        // 计算角度\n        var r = Math.atan2(dir.y, dir.x);\n        var degree = r * 180 / (Math.PI);\n        newBullet.rotation = 450 - degree;\n\n        // 设置参数\n        newBullet.x = this.node.x;\n        newBullet.y = this.node.y;\n        bulletSetting.direction = dir;\n        bulletSetting.speed = this.bulletSpeed;\n\n        // 添加到父节点中\n        this.node.parent.parent.addChild(newBullet)\n        this.node.parent.sortAllChildren();\n    },\n\n\n    /*\n     * 初始化函数\n     * 功能：初始化脚本运行所需的参数\n     */\n    onLoad () {\n        this.angle = 0\n        this.circulateDir = 1\n        this.flyDegree = 0\n        // 每隔一定时间要触发射击函数\n        this.schedule(this.shoot, this.shootTime);\n    },\n\n    /*\n     * 调整旋转角度函数\n     * 功能：调整对象的旋转角度，使其一直面向主角\n     */\n    face () {\n        this.angle += this.circulateDir*this.circulateUpdate;\n        this.angle = this.angle > 360 ? this.angle - 360 : this.angle\n\n        this.node.rotation = this.angle + 180\n\n        this.node.x = this.centerX + this.radius * Math.sin(this.angle * Math.PI / 180)\n        this.node.y = this.centerY + this.radius * Math.cos(this.angle * Math.PI / 180)\n    },\n\n    /*\n     * 更新飞行角度\n     * 功能：改变飞机的飞行角度，使得其绕着主角飞行\n     */\n    updateFlyDegree (dt) {\n        this.flyDegree += this.circulateDir*this.flyRotationUpdate/Math.PI\n        this.flyDegree = this.flyDegree > 360 ? this.flyDegree - 360 : this.flyDegree\n        this.Fly.rotation = this.flyDegree\n        \n        this.dir = cc.v2(this.Player.x - this.centerX, this.Player.y - this.centerY)\n        this.distance = this.dir.mag()\n\n        this.centerX += this.dir.x / this.distance * this.centerSpeed * dt\n        this.centerY += this.dir.y / this.distance * this.centerSpeed * dt\n    },\n\n    // 系统调用的更新函数\n    update (dt) {\n        this.updateFlyDegree()\n        this.face()\n    },\n});\n"]}