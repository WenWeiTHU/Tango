{"version":3,"sources":["Gravity.js"],"names":["cc","Class","extends","Component","properties","Player1","type","Node","default","Player2","Equilibrium","Grav","Step","resistence","MaxSpeed","start","onLoad","speedX1","speedX2","speedY1","speedY2","dir","v2","x","y","distance","mag","a","acce","updatePos","updateSpeed","dt","update"],"mappings":"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","file":"Gravity.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\Game","sourcesContent":["/* \n * 弹簧的重力系统脚本\n */\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        Player1: {\n            type: cc.Node,\n            default: null,\n        },\n\n        Player2: {\n            type: cc.Node,\n            default: null,\n        },\n\n        Equilibrium: 500,\n        Grav: 0.0005,\n        Step: 200,\n        resistence: 0.02,\n        MaxSpeed: 8,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    start () {},\n\n    /*\n     * 初始化函数\n     * 功能：初始化脚本所需的设定\n     */\n    onLoad() {\n        // 将初始化速度设成0\n        this.speedX1 = 0\n        this.speedX2 = 0\n        this.speedY1 = 0\n        this.speedY2 = 0\n\n        // 计算两个主角之间的位移向量\n        this.dir = cc.v2(this.Player1.x - this.Player2.x, this.Player1.y - this.Player2.y)\n        this.distance = this.dir.mag()\n\n        // 计算出加速度的大小\n        var a = this.Grav * (this.distance - this.Equilibrium)\n        this.acce = cc.v2(a * this.dir.x / this.distance, a * this.dir.y / this.distance)\n    },\n\n\n    /*\n     * 更新位置函数\n     * 功能：根据速度更新主角的位置\n     */\n    updatePos () {\n        this.Player1.x += this.speedX1\n        this.Player1.y += this.speedY1\n\n        this.Player2.x += this.speedX2\n        this.Player2.y += this.speedY2\n    },\n\n    /*\n     * 更新速度函数\n     * 功能：根据加速度来更新主角的速度\n     */\n    updateSpeed (dt) {\n        // 计算两个主角之间的位移向量\n        this.dir = cc.v2(this.Player1.x - this.Player2.x, this.Player1.y - this.Player2.y)\n        this.distance = this.dir.mag()\n\n        // 计算加速度\n        var a = this.Grav * (this.distance - this.Equilibrium)\n        this.acce = cc.v2(a * this.dir.x / this.distance, a * this.dir.y / this.distance)\n\n        // 更新速度\n        this.speedX1 -= this.acce.x\n        this.speedY1 -= this.acce.y\n\n        this.speedX2 += this.acce.x\n        this.speedY2 += this.acce.y\n        \n        // 为速度乘以一个衰减系数，使得移动具有一定的阻力\n        this.speedX1 -= this.speedX1 * this.resistence\n        this.speedX2 -= this.speedX2 * this.resistence\n        this.speedY1 -= this.speedY1 * this.resistence\n        this.speedY2 -= this.speedY2 * this.resistence\n    },\n    update(dt) {\n        this.updateSpeed(dt)\n        this.updatePos()\n    },\n});"]}